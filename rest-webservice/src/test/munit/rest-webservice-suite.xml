<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="rest-webservice-suite.xml" />
	<munit:test name="rest-webserviceFlow-test" doc:id="e561cab8-387d-4073-8021-5e28154f2883" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="b23e6b13-27d2-4faf-bb0c-7c986f6f92e0" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="1c95d3db-ff07-413c-b1b4-4a2f29e07412" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://restwebserviceFlowtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://restwebserviceFlowtest\mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="9986e641-acb0-4b8f-b97d-fa586d61f56c" >
				<munit:payload value="#[readUrl('classpath://restwebserviceFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://restwebserviceFlowtest\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to rest-webserviceFlow" doc:id="c545340d-59d5-43ca-aef9-22e4e27f45d6" name="rest-webserviceFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="0d167e4b-02c0-43ee-be5e-395732642bbe" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import restwebserviceFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
